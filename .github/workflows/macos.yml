# This is a basic workflow to help you get started with Actions

name: macOS CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    # Setup CMake
    - name: Setup CMake
      uses: Symbitic/install-cmake@v0.1.1
      with:
        platform: mac
    # Setup Packages
    - name: Setup Packages
      run: brew install qt5 pkgconfig
    # Use Static ZSTD
    - name: Remove ZSTD
      run: brew uninstall zstd curl php --force --ignore-dependencies
    # Run CMake
    - name: Run CMake
      run: mkdir -p build && cd build && cmake .. -G Ninja -DCMAKE_CXX_FLAGS="-Xclang -fcolor-diagnostics" -DCMAKE_PREFIX_PATH=$(brew --prefix qt5)
    # Build Project
    - name: Run Ninja
      run: cd build && ninja -j4
    # Configure Dolphin
    - name: Configure Dolphin
      run: cd build && cp -r ../Data/Sys/ Binaries/ && cp -r ../Data/User/ Binaries/ && cp -r ../Data/dolphin-emu.png Binaries/ && touch Binaries/portable.txt
    # Upload Artifact
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: DolphinMPN-macOS
        path: /Users/runner/work/dolphin-mpn/dolphin-mpn/build/Binaries/
